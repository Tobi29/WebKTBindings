/*
 * Copyright 2012-2019 Tobi29
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    def kotlinVersion = "1.3.31"
    def dokkaVersion = "0.9.18"
    def androidBuildVersion = "3.4.0"
    def androidMavenPublishVersion = "3.6.2"

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        classpath "com.android.tools.build:gradle:$androidBuildVersion"
        classpath "digital.wup:android-maven-publish:$androidMavenPublishVersion"
    }
}

apply from: rootProject.file("gradle/build-gitlab.gradle")

allprojects {
    repositories {
        google()
        jcenter()
    }

    afterEvaluate {
        def kotlin = extensions.findByName("kotlin")
        if (kotlin != null) {
            kotlin.sourceSets.each { sourceSet ->
                sourceSet.languageSettings {
                    useExperimentalAnnotation "kotlin.Experimental"
                    useExperimentalAnnotation "kotlin.ExperimentalUnsignedTypes"
                    progressiveMode = true
                }
            }
        }

        tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJsCompile) {
            compileTask ->
                compileTask.kotlinOptions.metaInfo = true
                compileTask.kotlinOptions.sourceMap = true
                compileTask.kotlinOptions.sourceMapEmbedSources = "always"
                compileTask.kotlinOptions.moduleKind = "umd"
        }
    }
}

Set<Object> propertyFalseValues = ["false", "0"]

def booleanPropertyDefaultTrue = {
    name -> !(project.findProperty(name) in propertyFalseValues)
}

ext {
    enableAndroid = booleanPropertyDefaultTrue("enableAndroid")

    androidSdkVersion = 28
    androidVersionCode = 1
    
    lwjglVersion = "3.2.1"
    lwjgl = { module -> "org.lwjgl:$module:$lwjglVersion" }
}
